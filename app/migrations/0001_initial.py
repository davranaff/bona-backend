# Generated by Django 4.1.4 on 2023-05-08 09:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='category name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category/', verbose_name='category image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryCountries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('city', models.CharField(blank=True, max_length=100, unique=True, verbose_name='delivery cities')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, verbose_name='total price')),
                ('quantity', models.FloatField(blank=True, verbose_name='total quantity')),
                ('street', models.TextField(blank=True, verbose_name='street')),
                ('home', models.TextField(blank=True, verbose_name='home')),
                ('telephone', models.CharField(blank=True, max_length=100, verbose_name='telephone number')),
                ('buy', models.BooleanField(null=True, verbose_name='buyed')),
                ('order_id', models.BigIntegerField(verbose_name='order id')),
                ('delivery_city', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_country', to='app.deliverycountries')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='The name of the country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('type', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='product type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='subcategory name')),
                ('image', models.ImageField(null=True, upload_to='subcategory/', verbose_name='subcategory image')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategory_category', related_query_name='category_subcategory', to='app.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='product name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='product image')),
                ('product_code', models.IntegerField(blank=True, unique=True, verbose_name='product code')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=30, verbose_name='product price')),
                ('description', models.TextField(blank=True, verbose_name='product description')),
                ('quantity', models.FloatField(blank=True, verbose_name='Quantity in stock (kg or pieces)')),
                ('discount', models.BooleanField(default=False, null=True, verbose_name='product discount')),
                ('discount_percent', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='product discount percent exm: (5, 10, 100)')),
                ('country', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_type', to='app.productcountry')),
                ('product_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_type', to='app.producttype')),
                ('subcategory', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_subcategory', to='app.subcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('order', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_product_order', to='app.order')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_product_product', to='app.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='created date/time')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=30, verbose_name='total price')),
                ('quantity', models.FloatField(blank=True, verbose_name='total quantity')),
                ('buy', models.BooleanField(default=False, verbose_name='buyed')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='app.product')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
